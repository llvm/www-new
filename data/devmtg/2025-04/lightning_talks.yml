lightning_talks:
- title: "What is LLDB-DAP?"
  speaker: "Jonas Devlieghere"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/lightning_talk/devlieghere_lldb-dap.pdf"
  video_url: "https://youtu.be/sfJkf7U2FUg"
  description: "lldb-dap is a utility that allows LLDB to work with editors and IDEs that support the Debug Adapter Protocol (DAP), such as Visual Studio Code. It builds on LLDB's stable API and uses a standardized protocol to act as a bridge between LLDB and other developer tools. It is part of the Xcode developer tools and the open source Swift toolchain. It is also the name of the official VS Code extension, which is available in the Marketplace. We'll talk about the Debugger Adapter Protocol, how we support it in LLDB and where the line is between the IDE-agnostic tool and the VSCode extension."

- title: "sd-visualiser: Interactive graph visualisation for SSA-based IRs"
  speaker: "Alex Rice"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/lightning_talk/rice_sd-visualiser.pdf"
  video_url: "https://youtu.be/fMtGvyWgkXc"
  description: "We present sd-visualiser, an interactive graph visualisation program. It is specialised for drawing constructions common in LLVM and MLIR, such as regions, blocks, nodes with multiple ordered inputs and outputs, and SSA-values with multiple uses. We will demo the tool, and show off some of its interactive features."

- title: "Beyond Pattern-based Optimization: What Can LLM Reshape Auto-vectorization?"
  speaker: "Long Cheng"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/lightning_talk/cheng_beyond_pattern.pdf"
  video_url: "https://youtu.be/OLuzmHx0JZ4"
  description: "Our talk, Beyond Pattern-based Optimization: What Can LLM Reshape Auto-vectorization?, presents a novel LLM-driven framework integrated into LLVM-based compilers. By combining the semantic reasoning capbility of LLM Deepseek V3 with the precision of traditional LLVM-based compilers, we tackle complex vectorization scenarios which is generally hard to be done for naive LLVM-based compilers. We'll share results from TSVC-2 HPC and Skia benchmarks, demonstrating significant performance improvements (1.42× to 1.91×) on SVE/Neon for Arm CPUs. Learn how this approach reshapes auto-vectorization and discover future directions for LLM-native compiler optimization."

- title: "Why add an IR Reader to the llvm-debuginfo-analyzer tool?"
  speaker: "Carlos Alberto Enciso"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/lightning_talk/alberto_enciso_ir_reader.pdf"
  video_url: "https://youtu.be/jwHgqBPt_Xo"
  description: "The llvm-debuginfo-analyzer is a tool developed by Sony, as part of the open-source LLVM project. We have added support for the LLVM IR format. This talk will cover the benefits to allow compare IRs at different stages and determine any specific changes."

- title: "To be OR NOT to be"
  speaker: "Piotr Fusik"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/lightning_talk/fusik_to_be.pdf"
  video_url: "https://youtu.be/82kQW7WEQJw"
  description: "RISC-V has inverted bitwise operations such as or not. I will present a few scenarios where they are useful and how I implemented them in LLVM."

- title: "Accidentally quadratic in compiler-rt/asan"
  speaker: "Artem Pianykh"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/lightning_talk/pianykh_quadratic.pdf"
  video_url: "https://youtu.be/S9943zeZN5c"
  description: "You build your binary with ASan, you run it...and nothing happens for 10 seconds. Without ASan the binary starts instantly. This talk will discuss how a bad asymptotic in the ODR checker's runtime code turned into a practical performance bottleneck, the fix to this problem, and the importance of tight upper bounds."

- title: "Dialects as a Dialect: Bringing native C++ registration to IRDL"
  speaker: "Ivan Ho"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/lightning_talk/ho_dialects.pdf"
  video_url: "https://youtu.be/RzkT3ZQN8iI"
  description: "IRDL allows to define dialects in MLIR in a declarative and easy to analyse fashion. While this feature set was useful on its own, IRDL-defined dialects were not tightly integrated into MLIR: it was notably impossible to realistically use C++ patterns on them, or use dialect conversion with them. We present how we created a new MLIR tool capable of generating C++ definitions for dialects, just like ODS with TableGen. With our tool, IRDL-defined dialects are now tightly integrated into MLIR and indistinguishable from ODS dialects from a user's perspective. We also present how we wish to improve the code template rendering tooling in LLVM."

- title: "Autocheck: Clang-Based Checker for Automotive: Status and Issues"
  speaker: "Djordje Todorovic"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/lightning_talk/todorovic_autocheck.pdf"
  video_url: "https://youtu.be/ygIFcIFEBHw"
  description: "Autocheck is a clang-based source code analysis tool designed to enforce compliance with the automotive standards, ensuring that critical automotive software adheres to strict safety and quality guidelines. In this talk, I will present the current status of Autocheck, discussing its implementation using the clang API, the challenges we have encountered—particularly around open-sourcing due to licensing and approval hurdles—and our roadmap for supporting both the current and new versions of the automotive standards, usage of AI, and more."

- title: "LLDB Statusline"
  speaker: "Jonas Devlieghere"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/lightning_talk/devlieghere_lldb_statusline.pdf"
  video_url: "https://youtu.be/BQFwcsN1dJU"
  description: "Motivated by a better place to show progress events and a way to display the current state of the debugger, I extended command-line LLDB with a statusline. This dedicated area at the bottom of the screen shows things like the current target, the stop reason, and progress updates. The statusline can be customized using LLDB's format strings. I'll talk a little bit about the motivation, the implementation, and how to configure it."

- title: "Defining and verifying MLIR operations with constraints"
  speaker: "Alex Rice"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/lightning_talk/rice_constraints.pdf"
  video_url: "https://youtu.be/ZU9Lz1Hhnwk"
  description: "This talk describes work in progress on a new constraint-based system for defining MLIR operations, which can be used to declaritely specify complex verification procedures, as well as providing inference of operation fields used when defining custom syntax of MLIR operations."