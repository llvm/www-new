quick_talks:
- title: "Leveraging nsw in Flang's LLVM IR Generation for Vectorization"
  speaker: "Yusuke Minato"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/minato_nsw.pdf"
  video_url: "https://youtu.be/n-B-JWanf6g"
  description: "Flang is the Fortran frontend in the LLVM project. Its quality and performance have been improving, so that its driver has been renamed from flang-new to flang since LLVM 20. With respect to optimizations, loop vectorization plays an important role because it can reduce the number of operations in a loop by half or more. This talk focuses on Flang's capability of vectorization in the backend and our work on nsw to improve the capability. As a result of our work, loop vectorization for Fortran has been enhanced by introducing several options related to integer overflow into Flang."

- title: "Instruction Cache Prefetching"
  speaker: "Oriel Avraham"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/avraham_prefetching.pdf"
  video_url: "https://youtu.be/pA1JHAWplUE"
  description: "This talk explores the addition of a lightweight, non-blocking instruction cache prefetching mechanism tailored for simple hardware architectures without built-in I$ optimization components. We will discuss how the LLVM framework can be used to identify strategical points for prefetch insertion through static analysis."

- title: "#embed in clang: one directive to embed them all"
  speaker: "Lukas Sommer"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/podchishchaeva_embed.pdf"
  video_url: "https://youtu.be/AGgVzI6rpN0"
  description: "The C23 standard defines the #embed directive â€“ a fast, simple, tooling-friendly, cross-platform standardized way to include binary data into an application. For 40+ years of C and C++ implementations every compiler, every linker, every platform had its own little bespoke way of putting data into your executable. Since 2024 with C23 we now have #embed in clang: just one directive to (rule) embed them all. This talk will present the language feature design, feature status in clang, clang implementation details, and challenges faced during the implementation."

- title: "LLVM_ENABLE_RUNTIMES=flang-rt"
  speaker: "Michael Kruse"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/kruse_flang-rt.pdf"
  video_url: "https://youtu.be/AGrInJLxJ0Q"
  description: "Flang's runtime library was changed from being compiled as part of Flang itself, to using LLVM's mechanism for runtime libraries. On this occasion this talk is about the motivation behind this change, design choices, the implications for users, experiences of the conversion, the purpose of runtime libraries, comparison to Clang's runtime libraries, and the differences between LLVM_ENABLE_PROJECTS and LLVM_ENABLE_RUNTIMES."

- title: "LLDB support for Propeller optimized code"
  speaker: "Pavel Labath"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/labath_propeller.pdf"
  video_url: "https://youtu.be/osE0UDJULoM"
  description: "Propeller optimization boosts binary performance by up to 20%, but creates challenges for LLDB due to non-continuous functions. This talk unveils how LLDB was adapted to handle these complexities and explains how to avoid common pitfalls when writing new LLDB code."

- title: "1:N Dialect Conversion in MLIR"
  speaker: "Matthias Springer"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/springer_dialect_conversion.pdf"
  video_url: "https://youtu.be/UaV1TmqGLfc"
  description: "The dialect conversion framework, one of the core pattern drivers in MLIR, has recently been extended with 1:N support: replacing one SSA value with multiple other SSA values. This talk illustrates how to use the new infrastructure and migrate existing passes that are currently relying on workarounds."

- title: "Enhancing Tile & Fuse Transformation in MLIR with a Planning Interface"
  speaker: "Aviad Cohen"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/cohen_planning_interface.pdf"
  video_url: "https://youtu.be/Iv8HBkpHr2c"
  description: "The MLIR project provides a Tile & Fuse transformation to enhance memory locality by breaking down computations into smaller tiles and merging tiled loops. While the transformation utilities exist, determining optimal tiling and fusion decisions is challenging due to the lack of readily available iteration domain mapping information. This talk proposes a new interface to expose this critical mapping independent of the transformation process, enabling more informed and flexible tiling and fusion strategies. By providing a common solution, this interface aims to benefit both in-tree and out-of-tree dialects, addressing challenges faced by downstream projects and improving the broader MLIR ecosystem."

- title: "LTO/BOLT Optimised Clang/LLD AArch64 toolchain"
  speaker: "Elvina Yakubova"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/yakubova_lto_bolt.pdf"
  video_url: "https://youtu.be/1NEpinve_DY"
  description: "In this talk, we present our work on building a faster AArch64 Clang compiler by using an advanced LTO-PGO-BOLT build. We'll show that using the default settings leads to regressions in some applications due to its training on C++ codebases. To address this issue, efforts are made to diversify the training phase and merge profiles from applications with different codebases to develop a LTO-PGO-BOLT-optimized compiler that achieves higher performance across a wider range of applications."

- title: "MLIR Tensor Compiler Charter Update"
  speaker: "Rolf Morel"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/morel_mlir_tensor.pdf"
  video_url: "https://youtu.be/mhCs8ARhtSk"
  description: "This will be an update on the current efforts to consolidate the MLIR charter via the recently formed design group. In the two months before EuroLLVM, we'll collect rationale, design and implementation documents, review contents and propose changes and reach a state where we'll be in a position to start making more assertive suggestions based on the community's feedback on current progress. This effort will continue upstream, in the open, but we recognize that the volume and intensity of discussions can be daunting, so we plan to present a summary of the current state and potential futures, which will lead into a round table for discussions, and follow-up forum threads to finally reach back the rest of the community."

- title: "Accurate Runtime Performance Estimation for Predictably Training ML Guided Register Eviction Policies"
  speaker: "Aiden Grossman"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/grossman_accurate_runtime.pdf"
  video_url: "https://youtu.be/6iQ8q3H3zI0"
  description: "Within this talk, we describe how we trained a machine-learned register allocation heuristic using a new trace-based runtime estimation methodology. We outline how our new performance estimation system works, our overall training process, and our results, where we were able to achieve performance gains of around 1% on some server binaries."

- title: "The New Premerge System"
  speaker: "Aiden Grossman"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/grossman_premerge_system.pdf"
  video_url: "https://youtu.be/6iQ8q3H3zI0"
  description: "Here we talk through the redesigned premerge system. We show a demo of the system in action from the contributor perspective, talk through the public analytics to understand system performance and reliability, explain the SLO and on-call process, provide a technical overview of the system, and answer any questions the audience might have."

- title: "Measuring the health of the LLVM community"
  speaker: "Jeremy Bennett"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/bennett_community_health.pdf"
  video_url: "https://youtu.be/DmAMrE6lfl4"
  description: "In this short talk, I look at how data mining of git activity and mailing lists can give insight to the health for a community project. The talk offers no prescriptions, its purpose is to share techniques that may be useful to the community."

- title: "Lessons learned from leveling up RISC-V LLVM testing"
  speaker: "Alex Bradbury"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/bradbury_lessons_learned.pdf"
  video_url: "https://youtu.be/BYwJl181B4M"
  description: "Testing is essential to ensuring the quality of LLVM's releases and maintaining its development velocity. LLVM has built an extensive collection of CI and testing infrastructure over the years, but it can be challenging to stand up builders that provide a reasonable cycle time for scenarios such as testing a backend of target configuration where high performance hardware isn't (yet) readily available. This talk describes work done to improve the situation for RISC-V, including extending support for qemu and cross-compilation scenarios, improvements to documentation and the ability to test buildbot configurations locally, balancing available compute resource vs configuration coverage vs test cycle time, and the path to providing feedback beyond functional testing (e.g. code size, performance)."

- title: "Small Changes, Big Impact: GitHub Workflows for the LLVM Project"
  speaker: "David Spickett"
  slides_url: "https://llvm.org/devmtg/2025-04/slides/quick_talk/spickett_github_workflows.pdf"
  video_url: "https://youtu.be/8AvXA094Io8"
  description: "LLVM contributors benefit from GitHub workflows every day, but did you know that if you want to write one of your own, all you need is a GitHub account? Find out how to get started, iterate and test, then finally submit your workflow to LLVM where 100s of developers can benefit from it."