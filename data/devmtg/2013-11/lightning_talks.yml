lightning_talks:
- title: "Fixing MC for ARM v7-A: Just a few corner cases – how hard can it be?"
  speaker: "Mihail Popa (ARM)"
  slides_url: "https://llvm.org/devmtg/2013-11/slides/Popa-MCARM.pdf"
  video_url: "https://youtu.be/FU7R2OQJBRA"
  description: "In 2012, MC Hammer was presented as a testing infrastructure to exhaustively verify the MC layer implementation for the ARM backend. Within ARM we have been working to fix any bugs and we have reached the point where all but one problem remains unsolved. Some of the issues discovered in this process have proven to be excessively difficult to fix. The purpose of the presentation is to give a brief rundown of the major headaches and to suggest possible courses of action for improving LLVM infrastructure."

- title: "VLIW Support in the MC Layer"
  speaker: "Mario Guerra (Qualcomm Innovation Center, Incorporated)"
  slides_url: "https://llvm.org/devmtg/2013-11/slides/Guerra-VLIW.pdf"
  video_url: "https://youtu.be/XpvoWFvNqc8"
  description: "Modern DSP architectures such as Hexagon use VLIW instruction packets, which are not well suited to the single instruction streaming model of the LLVM MC layer. Developing an assembler for Hexagon presents unique challenges in the MC layer, especially since Hexagon leverages an optimizing assembler to achieve maximum performance. It is possible to support VLIW within the MC layer by treating every MC instruction as a bundle, and adding all instructions in a packet as sub instruction operands. Furthermore, subclassing MCInst to create a target-specific type of MCInst allows us to capture packet information that will be used to make optimization decisions prior to emitting the code to object format."

- title: "Link-Time Optimization without Linker Support"
  speaker: "Yunzhong Gao (Sony Computer Entertainment America)"
  slides_url: "https://llvm.org/devmtg/2013-11/slides/Gao-LTO.pdf"
  video_url: "https://youtu.be/G5qRJsnVE_k"
  description: "LLVM's plugin for the Gold linker enables link-time optimization (LTO). But the toolchain for PlayStation®4 does not include Gold. Here's how we achieved LTO without a bitcode-aware linker."

- title: "A comparison of the DWARF debugging information produced by LLVM and GCC"
  speaker: "Keith Walker (ARM)"
  slides_url: "https://llvm.org/devmtg/2013-11/slides/Walker-DWARF.pdf"
  video_url: "https://youtu.be/dH_-hivshcA"
  description: "This talk explores the quality of the DWARF debugging information generated by LLVM by comparing it with that produced by GCC for ARM/AArch64 based targets. It highlights where LLVM's debugging information is superior to that generated by GCC and also where there are deficiencies and scope for further development. I will also explain how these difference translate into good or bad debug experiences for users of LLVM."

- title: "aarch64 neon work"
  speaker: "Ana Pazos (QuIC), Jiangning Liu (ARM)"
  slides_url: "https://llvm.org/devmtg/2013-11/slides/Pazos-Aarch64.pdf"
  video_url: "https://youtu.be/m6klgtQI39E"
  description: "ARM and Qualcomm are implementing aarch64 advanced SIMD (neon) instruction set. We as a joint team will be implementing all of 25 classes of neon instructions on MC layer as well as all of ACLE(ARM C Language Extension) intrinsics on C level. Our talk will highlight the design choice of unique arm_neon.h for both ARM(aarch32) and aarch64, appropriate decision making of value types on LLVM IR for generating SISD instruction classes, the patterns’ qualities in .td files by reducing LLVM IR intrinsics, and all of the test categories to build a robust back-end. Finally, we’d like to mention some future plan like enabling machine instruction based scheduler, and performance tuning etc."

- title: "JavaScript JIT with LLVM"
  speaker: "Filip Pizlo (Apple Inc.)"
  slides_url: "https://llvm.org/devmtg/2013-11/slides/Pizlo-JavascriptJIT.pdf"
  video_url: "https://youtu.be/VzvJ8YyKtxQ"
  description: "Dynamic languages present unique challenges for compilation, such as the need for type speculation and self-modifying code. This talk shows how to add support for these features to LLVM and use them to implement a JIT for JavaScript."

- title: "Debug Info Quick Update"
  speaker: "Eric Christopher (Google Inc.)"
  slides_url: "https://llvm.org/devmtg/2013-11/slides/Christopher-DebugInfo.pdf"
  video_url: "https://youtu.be/m2PSaxCj3PI"
  description: "A quick update on what's been going on in debug info support since the Euro meeting."

- title: "lld a linker framework"
  speaker: "Shankar Easwaran (Qualcomm Innovation Centre)"
  slides_url: "https://llvm.org/devmtg/2013-11/slides/Easwaran-LLD.pdf"
  video_url: "https://youtu.be/exQRMExCydY"
  description: "The lld project is working towards becoming a production-quality linker targeting PECOFF, Darwin, and ELF formats. The lld project is under heavy development. The talk discusses how lld achieves universal linking and how it is moving towards becoming a linker framework that could be an integral part of LLVM. The talk continues by exposing new opportunities with linking such as lld APIs, symbol resolution improvements, link-time optimizations (LTO), and enhancing the user experience by providing diagnostics and user-driven inputs that drive linker behavior."
