quick_talks: 
- title: "ClangIR’s Footprint: Compile Time Impact"
  speaker: "Bruno Cardoso Lopes"
  slides_url: "https://llvm.org/devmtg/2025-06/slides/quick-talk/lopes-compile-time.pdf"
  video_url: "https://youtu.be/Dh_RObp5SUE"
  description: "This presentation explores recent measurements of ClangIR’s impact on compile time. It addresses community concerns from the upstreaming RFC about compilation performance while providing updates on ClangIR’s status."

- title: "The Data Inspection Language: Fast & Simple Expression Evaluation in LLDB"
  speaker: "Andrei Lebedev"
  slides_url: "https://llvm.org/devmtg/2025-06/slides/quick-talk/lebedev-lldb.pdf"
  video_url: "https://youtu.be/tgsDbrQga_w"
  description: "LLDB often spends a substantial amount of time evaluating expressions needed for displaying certain debug information in an IDE. Currently, this work must be done by LLDB’s full expression evaluator, a very powerful but somewhat slow and heavyweight mechanism. However, these expressions tend to be small and simple, so most of them could be evaluated much faster. The approach of a fast limited expression evaluator was leveraged in lldb-eval for a limited C++ subset proving that the approach is viable. In this talk we introduce the Data Inspection Language (DIL) – a new LLVM mainline effort based partly on lldb-eval that aims to expand its capabilities, make it more robust and language-agnostic. The goal of DIL is to eventually replace the existing frame variable mechanism in LLDB, permitting it to be used for simple expression evaluation. This new implementation will greatly increase the capabilities of ‘frame variable’, allowing it to quickly and directly evaluate simple expressions, in turn allowing to bypass the full expression evaluator in many common cases."

- title: "A technology for lifting machine code to high-performance LLVM IR"
  speaker: "Masashi Yoshimura"
  slides_url: "https://llvm.org/devmtg/2025-06/slides/quick-talk/yoshimura-ir.pdf"
  video_url: "https://youtu.be/oXQ6b2wZWpU"
  description: "Introducing a technology for lifting machine code to high-performance LLVM IR. This approach transforms Linux/ELF binaries into executables for various target platforms through ahead-of-time compilation. It converts code sections into LLVM IR using a tool that translates machine instructions into equivalent IR, then applies a sophisticated optimization that leverages virtual registers to enhance performance. In this session, we’ll explore the underlying architecture, key optimization strategies, and discuss future challenges and opportunities for advancing cross-platform binary translation."

- title: "Improving LLVM Backend Development with a New TableGen Language Server"
  speaker: "Shin Ando"
  slides_url: "https://llvm.org/devmtg/2025-06/slides/quick-talk/ando-backend.pdf"
  video_url: "https://youtu.be/XrF9HWCBkBE"
  description: "TableGen is essential for LLVM backend development, but the current development experience leaves much to be desired. This talk presents a new language server tailored for TableGen, with improved performance, stability, and dedicated support for backend development. Through robust parsing, advanced analysis, and a rich set of LSP features, we show how the development experience can be significantly improved."

- title: "Improvements to LoopInterchange to accelerate vectorization"
  speaker: "Ryotaro Kasuga"
  slides_url: "https://llvm.org/devmtg/2025-06/slides/quick-talk/kasuga-loopinterchange.pdf"
  video_url: "https://youtu.be/VV5nFm1ByY0"
  description: "LoopInterchange is a transform pass that exchanges the order of loops within a nested loop. It accelerates loop vectorization in some cases, especially the vectorization of the innermost loop. This talk is about how LoopInterchange affects vectorization and improvements to LoopInterchange to boost vectorization."