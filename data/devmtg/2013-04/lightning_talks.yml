lightning_talks:
- title: "MCLinker: Design and Implementation of a Fragments-based Target-independent Linker"
  speaker: "Diana Chen"
  slides_url: "https://llvm.org/devmtg/2013-04/chen-slides.pdf"
  video_url: "https://youtu.be/gISMoK3fGFg"
  description: ""

- title: "Sambamba: A Runtime System for Online Adaptive Parallelization"
  speaker: "Clemens Hammacher"
  slides_url: "https://llvm.org/devmtg/2013-04/hammacher-slides.pdf"
  video_url: "https://youtu.be/GclQAaP8J-0"
  description: ""

- title: "Noise: A Clang Extension for User-Defined Optimization Strategies"
  speaker: "Ralf Karrenberg"
  slides_url: "https://llvm.org/devmtg/2013-04/karrenberg-slides.pdf"
  video_url: "https://youtu.be/zAUxHBs3iVs"
  description: ""

- title: "Integrating fine-grained timing constraints into LLVM"
  speaker: "David Lacey"
  slides_url: "https://llvm.org/devmtg/2013-04/lacey-slides.pdf"
  video_url: "https://youtu.be/eA-tpkYpZR8"
  description: "This talk covers a problem we are just beginning to tackle of integrating fine-grained timing constraints into LLVM. Code written for real-time tasks often comes with worst case timing constraints on paths within the program (usually between I/O operations). These paths can be quite short or can cross across basic blocks and function boundaries. Unfortunately, the optimizations within LLVM are not aware of these constraints and code motion or control flow optimizations can move calculations into a critical path quite easily. I'll cover the experiences we've had with the optimizations in the compiler and go over the initial ideas we have to tackle the problem."

- title: "Rebuild of all Debian packages using Clang instead of GCC"
  speaker: "Sylvestre Ledru"
  slides_url: "https://llvm.org/devmtg/2013-04/ledru-slides.pdf"
  video_url: "https://llvm.org/devmtg/2013-04/"
  description: "Besides the GNU/Linux kernel, Debian is now able to run with two others kernels (KFreeBSD & HURD). However, in terms of compilation, Debian is still coupled to gcc. This lightning talk will present the results of the rebuild of the whole Debian archive with various clang versions. A necessary step to make Debian compiler agnostic."

- title: "FDO-based whole program optimization in LLVM"
  speaker: "Diego Novillo"
  slides_url: "https://llvm.org/devmtg/2013-04/novillo-slides.pdf"
  video_url: "https://youtu.be/vnL4rqE0XtQ"
  description: "At Google, we achieve the highest levels of performance using whole program optimization. However, traditional whole program optimization does not scale to the size of applications that we are interested in optimizing. In this lightning talk, I will briefly describe the FDO technologies that we have implemented, how we apply them to whole program optimization and our plans to port this technology to the LLVM compiler."

- title: "Efficient audio signal processing using LLVM and Haskell"
  speaker: "Henning Thielemann"
  slides_url: "https://llvm.org/devmtg/2013-04/thielemann-slides.pdf"
  video_url: "https://youtu.be/0KPuzXoAwfQ"
  description: "I am using LLVM for audio signal processing via Haskell. My goal is to combine the safety and elegance of Haskell with the speed of code generated by LLVM. My approach is an embedded domain specific language (EDSL), that is, my library provides Haskell functions that look like signal processing functions, but actually they represent pieces of LLVM assembly code. Composing such signal functions means assembling large LLVM code blocks from smaller ones. I use the JIT for turning the LLVM code into executable C functions. This also allows me to adapt to available processor extensions like SSE and AVX at startup time of a signal processing program. I make intensive use of the vector instructions of LLVM."